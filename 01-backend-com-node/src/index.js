// imports
const express = require("express");

// inicializa o express
const app = express();

/**
 * MÃ©todos HTTP:
 *
 * GET: buscar informaÃ§Ãµes (recursos) do back-end
 * POST: criar uma informaÃ§Ã£o no back-end
 * PUT/PATCH: alterar uma informaÃ§Ã£o no back-end
 * DELETE: excluir uma informaÃ§Ã£o no back-end
 */

// HTTP GET
app.get("/projects", (request, response) => {
  // retornando um json
  return response.json({
    data: ["Projeto Ambar", "Projeto Blackbird", "Projeto Codecanyon"],
  });
});

// HTTP POST
app.post("/projects", (request, response) => {
  // lÃ³gica para tratar e salvar dados enviados ...

  // retornar alguma informaÃ§Ã£o
  return response.json({
    data: [
      "Projeto Ambar",
      "Projeto Blackbird",
      "Projeto Codecanyon",
      "Projeto Destinybond",
    ],
  });
});

// HTTP PUT
app.put("/projects/:id", (request, response) => {
  // lÃ³gica para tratar e salvar (atualizar) os dados enviados ...

  return response.json({
    data: [
      "Projeto Ambar",
      "Projeto Blackbird",
      "Projeto CleanCyan",
      "Projeto Destinybond",
    ],
  });
});

// HTTP DELETE
app.delete("/projects/:id", (request, response) => {
  // lÃ³gica para tratar excluir os dados enviados ...

  return response.json({
    data: ["Projeto Ambar", "Projeto Blackbird", "Projeto CleanCyan"],
  });
});

// servidor executando na porta 3333
app.listen(3333, () => console.log("ğŸš€ Server started!"));
